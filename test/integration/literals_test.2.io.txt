# exit:2

New • auto_assert

...
     test "integers" do
       # no assertion yet
 -     auto_assert 2 + 2
 +     auto_assert 4 <- 2 + 2

       # correct assertion
...

Accept new assertion? [yN]: !{y
}
Changed • auto_assert

...

       # incorrect assertion
 -     auto_assert 4 <- 2 + 1
 +     auto_assert 3 <- 2 + 1
     end

...

Value has changed! Update to new value? [yN]: !{n
}
New • auto_assert

...
     test "strings" do
       # no assertion yet
 -     auto_assert "foo" <> "bar"
 +     auto_assert "foobar" <- "foo" <> "bar"

       # correct assertion
...

Accept new assertion? [yN]: !{y
}
Changed • auto_assert

...

       # incorrect assertion
 -     auto_assert "foobar" <- "foo" <> "baz"
 +     auto_assert "foobaz" <- "foo" <> "baz"
     end
   end
...

Value has changed! Update to new value? [yN]: !{n
}

1) test integers (MnemeIntegration.LiteralsTest)
match (=) failed
code:  assert 4 = value
left:  4
right: 3
stacktrace:



2) test strings (MnemeIntegration.LiteralsTest)
match (=) failed
code:  assert "foobar" = value
left:  "foobar"
right: "foobaz"
stacktrace:


2 tests, 2 failures
