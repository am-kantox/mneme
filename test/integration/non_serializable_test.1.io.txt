# exit:0

New â€¢ auto_assert

...
       my_ref = make_ref()

 -     auto_assert Function.identity(my_ref)
 +     auto_assert ^my_ref <- Function.identity(my_ref)

       auto_assert [my_ref]
...

Accept new assertion? [yN]: !{y
}
New â€¢ auto_assert

...
       auto_assert ^my_ref <- Function.identity(my_ref)

 -     auto_assert [my_ref]
 +     auto_assert [^my_ref] <- [my_ref]
     end

...

Accept new assertion? [yN]: !{y
}
New â€¢ auto_assert

...

     test "guard" do
 -     auto_assert make_ref()
 +     auto_assert ref when is_reference(ref) <- make_ref()

       auto_assert [make_ref()]
...

ğŸ›ˆ Notes about this assertion:
  * Using guard for non-serializable value `#Reference<0.1746456238.517472257.216421>`

Accept new assertion? [yN]: !{y
}
New â€¢ auto_assert

...
       auto_assert ref when is_reference(ref) <- make_ref()

 -     auto_assert [make_ref()]
 +     auto_assert [ref] when is_reference(ref) <- [make_ref()]

       auto_assert self()
...

ğŸ›ˆ Notes about this assertion:
  * Using guard for non-serializable value `#Reference<0.1746456238.517472257.216434>`

Accept new assertion? [yN]: !{y
}
New â€¢ auto_assert

...
       auto_assert [ref] when is_reference(ref) <- [make_ref()]

 -     auto_assert self()
 +     auto_assert pid when is_pid(pid) <- self()
     end
   end
...

ğŸ›ˆ Notes about this assertion:
  * Using guard for non-serializable value `#PID<0.320.0>`

Accept new assertion? [yN]: !{y
}..
2 tests, 0 failures
